CONSUMER_KEY='u9L8y92xb1S0OrqydndNzM3Al'
CONSUMER_SECRET='UD0Rt625HHjnMwWKc5PH0YPLO2JE8aOzuGq39vLfVBU9zYWlm4'\n",
access_token='1308707110281195521-kYVJKftHmUlBEGNPIDzgH6iBuVBaxH'\n",
access_token_secret='VuvHmZ52CSTleeiFAnUXnF00rK9LmToi0zZRQiZRkuDGQ'\n",



    # plt.style.use('seaborn-white')
    # fig = plt.figure(figsize=(10, 5)) 
    # gs = gridspec.GridSpec(1, 2, width_ratios=[3, 1]) 
    # ax0 = plt.subplot(gs[0])
    # ax1 = plt.subplot(gs[1])
    # x=list(range(1, len(data)+1))    
    
    # # plot line plot
    # ax0.plot(x,data['prediction'],color='blue')
    # ax0.set_yticks(range(0,2))
    # # Finding the best position for legends and putting it   
    # ax0.legend(loc='best')
    # ax.set_xlabel('Tweet Count')
    # ax.set_ylabel('Tweet Status')
    # ax.set_title('Tweet Nature over time')
    
 
    # # plot pie chart
    # ax1.pie(sizes, labels=labels, autopct='%1.1f%%',
    #     shadow=True, startangle=90)
    # ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.



labels = 'Depressive','Non Depressive'
    sizes = [100*data['prediction'].tolist().count(1)/len(data), 100*data['prediction'].tolist().count(0)/len(data)]